package main

import (
	"go-dog/tool"
	"go-dog/st"
	"fmt"
	"time"
	"github.com/bitly/go-simplejson"
	"flag"
)
var petids = map[string]string{
	"2015382239376010926":"200000",
	"1941267802676617872":"200000",
	"1952863973857935088":"50000",
	"2014453117690527917":"400000",
	"2014444115438895380":"200000",
	"2014451708941213896":"300000",
	"2006547491647432298":"5000",
	"1898048165250923095":"500000",
	"1898048165250923092":"500000",
	"2015372584289333010":"200000",
	"1898047134458773182":"200000",
	"1952863595900809463":"200000",
	"1997638904841540047":"100000",
	"1894437162906590563":"50000",
	"2015370866302409213":"100000",
	"2006550412225276318":"200000",
	"2000517288844170414":"100000",
	"2015370935021877284":"100000",
	"2015380658827999013":"500000",
	"1973679584398586597":"200000",
	"2000517460642887748":"100000",
	"2015375573586664681":"100000",
	"1973675942266267845":"100000",
	"1984322272840139062":"100000",
	"1898052597657170422":"100000",
	"2015375436147675197":"100000",
	"1973673227846885184":"100000",
	"1941266256488361243":"100000",
	"1896037708239313497":"100000",
	"1941271685327098061":"100000",
	"2015377257213859435":"100000",
	"1952859472732133118":"100000",
	"2006549793749940577":"100000",
	"2015373615081510059":"100000",
	"1973680993147888045":"100000",
	"1952857101910152918":"100000",
	"1982340471850451092":"100000",
	"1898050639152086113":"100000",
	"1952859369652919265":"100000",
	"2015375985903522658":"5000",
	"1898047787293801584":"100000",
	"1970627511918306389":"200000",

	"1922966809588927325":"5000000",
	"1898049161683330729":"4000000",
	"2074771054281896867":"500000",
	"2000526772132057346":"500000",
	"2000527081369727960":"400000",

}
func auto_do_big(configuration st.Configuration)  {
	for petid :=range petids{
		res := tool.Sale(petid, petids[petid],configuration)
		res = tool.Unsale(petid,configuration)
		res = tool.Sale(petid, petids[petid],configuration)
		js,_:= simplejson.NewJson([]byte(res))
		if js!=nil{
			errno:=js.Get("errorNo").MustString()
			if errno =="30007"||errno=="30003"{
				delete(petids,petid);
			}
			fmt.Println(res)
		}
	}
}

func main() {
	var config string
	f := flag.String("f", "", "配置文件路径")
	flag.Parse() //解析输入的参数
	if(*f==""){
		fmt.Printf("请输入你的配置文件的绝对路径(例如：D:/file/conf.yaml)：")
		fmt.Scanln(&config)
	}else{
		config=*f
	}
	var  configuration st.Configuration
	configuration.GetConf(config)
	ticker := time.NewTicker(30 * time.Second)
	for _ = range ticker.C {
		go auto_do_big(configuration)
	}
}